{"version":3,"sources":["assets/image/logo.png","axios/http.js","pages/netease/Recommend.js","pages/netease/Index.js","pages/tencent/Index.js","pages/kugou/Index.js","pages/kuwo/Index.js","pages/migu/Index.js","pages/baidu/Index.js","pages/Index.js","CardList/index.js","CardList/Navheader.js","CardList/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","defaults","baseURL","timeout","headers","post","interceptors","response","use","data","error","console","log","Promise","reject","http","get","params","$axios","token","localStorage","getItem","upload","append","url","noToken","qs","stringify","Object","assign","resolve","then","res","code","removeItem","success","catch","err","Recommend","useState","list","setList","id","setId","useEffect","className","map","item","key","onClick","src","picUrl","alt","name","controls","autoPlay","MemoRecommend","memo","Index","banner","setBanner","couterRef","useRef","Swiper","current","observer","direction","loop","observeParents","navigation","nextEl","prevEl","ref","index","targetId","location","useLocation","myContext","createContext","nav","path","title","exact","component","require","netease","tencent","kugou","kuwo","migu","baidu","Context","props","Provider","value","children","Navheader","routeConfig","useContext","useMemo","to","Footer","MemoNavheader","APPRouter","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.060e0b92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c305c06e.png\";","import axios from \"axios\";\r\nimport qs from 'qs';\r\n\r\naxios.defaults.baseURL = 'https://v1.itooi.cn';//默认url\r\n// axios.defaults.withCredentials = true; //配置允许跨域携带cookie\r\naxios.defaults.timeout = 10000;  // 超时时间  10s\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';// 全局设定请求类型\r\n\r\n// 添加一个响应拦截器\r\naxios.interceptors.response.use(response => {\r\n    return response.data     // 其他的不要了，只拿data就好\r\n}, error => {\r\n    console.log(error)\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nlet http ={\r\n    post:'',\r\n    get:''\r\n}\r\n\r\nhttp.post = params => {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    let $axios;\r\n    if (params.upload) {\r\n        params.data.append('token', token ? token : \"\")\r\n        let config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n        $axios = axios.post(params.url, params.data, config)\r\n    } else if (params.noToken) {\r\n        let data = qs.stringify(Object.assign({}, params.data))\r\n        $axios = axios.post(params.url, data)\r\n    } else {\r\n        let data = qs.stringify(Object.assign({}, params.data, token ? {\r\n            token\r\n        } : {}))\r\n        $axios = axios.post(params.url, data)\r\n    }\r\n    return new Promise((resolve,reject) => {\r\n        $axios.then((res) => {\r\n            if (res.code === 0) {\r\n                if (token) localStorage.removeItem(\"token\");\r\n                console.log('未登录')\r\n            } else if (res.code === 200) {\r\n                console.log(params.url + ':', res);\r\n                params.success(res)\r\n            } else if (res.code === 400) {\r\n                params.error(res)\r\n            } else{\r\n                params.error(res)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log('服务器请求失败', err)\r\n        })\r\n    })\r\n}\r\n\r\nhttp.get = params => {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    return new Promise((resolve,reject) => {\r\n        axios.get(params.url , {\r\n            params: Object.assign({}, params.data, token ? {\r\n                token\r\n            } : \"\")\r\n        }).then((res) => {\r\n            if (res.code === 0) {\r\n                if (token) localStorage.removeItem(\"token\");\r\n                console.log('未登录')\r\n            } else if (res.code === 200) {\r\n                console.log(params.url + ':', res);\r\n                params.success(res)\r\n            } else if (res.code === 400) {\r\n                params.error(res)\r\n            } else{\r\n                params.error(res)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log('服务器请求失败', err)\r\n        })\r\n    })\r\n}\r\n\r\nexport default http","import React, { useState ,useEffect } from 'react';\r\nimport http from '../../axios/http'\r\nimport './Recommend.css'\r\n\r\nfunction Recommend(){\r\n\r\n    const [list, setList] = useState([]);\r\n    const [id, setId] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        http.get({\r\n            url:'/netease/song/newest',\r\n            success: res=>{\r\n                setList(res.data)\r\n            }\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"nav\">最新音乐</div>\r\n        <ul className=\"netease-Recommend\">\r\n            {\r\n                list.map((item)=>{\r\n                    return (\r\n                        <li key={item.id} onClick={()=>{setId(item.id)}}>\r\n                            <img src={item.picUrl} alt={item.name} />\r\n                            <p>{item.name}</p>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        <audio src={`https://v1.itooi.cn/netease/url?id=${id}&quality=128`} controls=\"controls\" autoPlay ></audio>\r\n        </div>\r\n    )\r\n}\r\nexport default Recommend;","import React, { useState, useEffect ,useRef ,memo } from 'react'\r\nimport http from '../../axios/http'\r\nimport Swiper from 'swiper'\r\nimport \"swiper/css/swiper.min.css\"\r\nimport Recommend from './Recommend'\r\nconst MemoRecommend = memo(Recommend);\r\n\r\nfunction Index(){\r\n    const [banner,setBanner] = useState([])\r\n    const couterRef = useRef(); // 用来获取dom元素 和 保存变量\r\n    \r\n    useEffect(() => {\r\n        http.get({\r\n            url:'/netease/banner',\r\n            success: res=>{\r\n                setBanner(res.data)\r\n            }\r\n        })\r\n        new Swiper (couterRef.current, {\r\n                    observer:true,\r\n                    direction: 'horizontal', // 垂直切换选项\r\n                    loop: true, // 循环模式选项\r\n                    observeParents:true,\r\n                    navigation: {\r\n                        nextEl: '.swiper-button-next',\r\n                        prevEl: '.swiper-button-prev',\r\n                      },\r\n                })\r\n        return ()=>{\r\n            // 退出的时候执行\r\n            console.log('退出');\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"Index\">\r\n            <header className=\"netease-header\">\r\n                <div className=\"swiper-container\" ref={couterRef}>\r\n                        <div className=\"swiper-wrapper\">\r\n                            {\r\n                                banner.map((item,index)=>{\r\n                                    return (\r\n                                        <div className=\"swiper-slide swipe-slides\" key={item.targetId + index} >\r\n                                            <img src={item.picUrl} alt=\"banner\" />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    {/* <!-- 如果需要导航按钮 --> */}\r\n                    <div className=\"swiper-button-prev\"></div>\r\n                    <div className=\"swiper-button-next\"></div>\r\n                </div>\r\n            </header>\r\n            <MemoRecommend />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nfunction Index(){\r\n    return (\r\n        <div className=\"Index\">我是QQ</div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nfunction Index(){\r\n    return (\r\n        <div className=\"Index\">我是酷狗</div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nfunction Index(){\r\n    return (\r\n        <div className=\"Index\">我是酷我</div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nfunction Index(){\r\n    return (\r\n        <div className=\"Index\">我是咪咕</div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nfunction Index(){\r\n    return (\r\n        <div className=\"Index\">我是百度</div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React,{useEffect} from 'react';\r\nimport {useLocation } from 'react-router-dom'\r\n\r\nfunction Index() {\r\n\r\n    let location = useLocation();\r\n    \r\n    useEffect(()=>{\r\n        console.log(location);\r\n    },[location])\r\n\r\n    return (\r\n      <div className=\"Index\">\r\n        <p className=\"Index-title\">集成了多个音乐平台,找音乐就如此简单</p>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Index;","import React,{ createContext } from \"react\";\r\nimport netease from '../pages/netease/Index'\r\nimport tencent from '../pages/tencent/Index'\r\nimport kugou from '../pages/kugou/Index'\r\nimport kuwo from '../pages/kuwo/Index'\r\nimport migu from '../pages/migu/Index'\r\nimport baidu from '../pages/baidu/Index'\r\nimport Index from \"../pages/Index\";\r\n\r\nexport const myContext = createContext({})\r\n\r\n// 导航栏数据\r\nconst nav = [\r\n    { path:'/', title:'LOGO', exact: true, component: Index, id:0 , url:require(\"../assets/image/logo.png\")},\r\n    { path: '/netease', title: '网易云音乐', exact: false, component: netease ,id:1},\r\n    { path: '/tencent', title: 'QQ音乐', exact: false, component: tencent ,id:2 },\r\n    { path: '/kugou', title: '酷狗音乐', exact: false, component: kugou  ,id:3},\r\n    { path: '/kuwo', title: '酷我音乐', exact: false, component: kuwo  ,id:4},\r\n    { path: '/migu', title: '咪咕音乐', exact: false, component: migu  ,id:5},\r\n    { path: '/baidu', title: '百度音乐', exact: false, component: baidu ,id:6},\r\n  ];\r\n// 给多个组件传相同参数\r\nexport const Context = props=>{\r\n    return (\r\n        <myContext.Provider value={nav}> \r\n            {props.children} {/* 所有的子组件 */}\r\n        </myContext.Provider>\r\n    )\r\n}","import React, { useContext ,useEffect ,useMemo } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport {myContext}  from './index'\r\n\r\n\r\nfunction Navheader() {\r\n    const routeConfig = useContext(myContext);//接受传值\r\n    \r\n    // 两种优化组件性能的方法\r\n    // 解决多条数据变化 组件重复渲染问题\r\n    useMemo(()=>{},[])\r\n    // onClick={useCallback(()=>{},[])}\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    return (\r\n        <Router>\r\n            <header className=\"App-header\">\r\n            {\r\n                routeConfig.map((item) => {\r\n                    return (\r\n                        <div key={item.id} className={item.id === 0?\"App-header-logo\":''} >\r\n                            <Link to={item.path} >\r\n                                {item.id === 0?<img src={item.url} alt={item.title} />:<span>{item.title}</span>}\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </header>\r\n            {\r\n              routeConfig.map((item, index) => {\r\n                return (\r\n                  <Route key={index} path={item.path} exact={item.exact} component={item.component} />\r\n                )\r\n              })\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navheader;","import React from 'react';\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"App-footer\">\r\n          <div>注：本项目 API 版权来源于 https://github.com/messoer</div>\r\n          <div>免责声明： 本项目只是技术研究学习使用</div>\r\n        </footer>\r\n    )   \r\n}\r\nexport default Footer;","import React ,{ memo } from 'react';\nimport './App.css';\nimport Navheader from './CardList/Navheader'\nimport {Context}  from './CardList/index'\nimport Footer from './CardList/Footer'\n\n// 父组件不需要传递方法和参数的情况下 使用memo 进行组件优化 (这样就不会出现父组件变化时 子组件重新渲染)\nconst MemoNavheader = memo(Navheader);\n\nfunction APPRouter() {\n  return (\n      <div className=\"App\">\n        <Context>\n          <MemoNavheader />\n        </Context>\n        <Footer />\n      </div>\n  )\n}\n\nexport default APPRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}